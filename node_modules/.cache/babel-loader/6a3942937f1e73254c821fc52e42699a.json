{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/Cart.js\";\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCart, getProduct, addToCart, removeFromCart } from '../../store/actions';\nimport CartSummary from '../../components/CartSummary/CartSummary';\nimport ContactData from './ContactData/ContactData';\nconst mapDispatchToProps = {\n  getCart,\n  getProduct,\n  addToCart,\n  removeFromCart\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  cart: state.cart,\n  totalPrice: state.totalPrice,\n  loading: state.loading,\n  error: state.error\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      localPrice: 0,\n      viewingContactData: false\n    };\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.push('/cart');\n      this.setState({\n        viewingContactData: false\n      });\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/cart/contact-data');\n      this.createNotification();\n      this.setState({\n        viewingContactData: true\n      });\n    };\n\n    this.checkoutGoBackHomeHandler = () => {\n      this.props.history.push('/home');\n    };\n\n    this.decrementHandler = id => {\n      this.props.removeFromCart(id, this.props.products);\n    };\n\n    this.incrementHandler = id => {\n      this.props.addToCart(id, this.props.products);\n    };\n\n    this.createNotification = () => {\n      store.addNotification({\n        title: 'Order Placed',\n        message: 'Order was placed successfully',\n        type: 'info',\n        // 'default', 'success', 'info', 'warning'\n        container: 'top-right',\n        // where to position the notifications\n        animationIn: [\"animated\", \"fadeIn\"],\n        // animate.css classes that's applied\n        animationOut: [\"animated\", \"fadeOut\"],\n        // animate.css classes that's applied\n        dismiss: {\n          duration: 3000\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProduct();\n    this.props.getCart();\n  }\n\n  render() {\n    let CartPage = /*#__PURE__*/React.createElement(CartSummary, {\n      cart: this.props.cart,\n      price: this.props.totalPrice,\n      checkoutContinued: this.checkoutContinuedHandler,\n      goBackHome: this.checkoutGoBackHomeHandler,\n      increment: this.incrementHandler,\n      decrement: this.decrementHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    });\n\n    if (this.state.viewingContactData) {\n      CartPage = /*#__PURE__*/React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        render: props => /*#__PURE__*/React.createElement(ContactData, Object.assign({\n          cart: this.props.cart,\n          price: this.props.totalPrice,\n          checkoutCancelled: this.checkoutCancelledHandler\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 49\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, CartPage);\n  }\n\n}\n\nexport default connector(Cart);","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/Cart.js"],"names":["React","Component","store","Route","connect","getCart","getProduct","addToCart","removeFromCart","CartSummary","ContactData","mapDispatchToProps","mapStateToProps","state","products","cart","totalPrice","loading","error","connector","Cart","localPrice","viewingContactData","checkoutCancelledHandler","props","history","push","setState","checkoutContinuedHandler","replace","createNotification","checkoutGoBackHomeHandler","decrementHandler","id","incrementHandler","addNotification","title","message","type","container","animationIn","animationOut","dismiss","duration","componentDidMount","render","CartPage","match","path"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {store} from 'react-notifications-component';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getCart, getProduct, addToCart, removeFromCart} from '../../store/actions';\n\nimport CartSummary from '../../components/CartSummary/CartSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst mapDispatchToProps = {getCart, getProduct, addToCart, removeFromCart}\nconst mapStateToProps = (state) => (\n    {   \n        products: state.products, \n        cart: state.cart,\n        totalPrice: state.totalPrice,\n        loading: state.loading, \n        error: state.error \n    }\n);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nclass Cart extends Component {\n    state = {\n        localPrice: 0,\n        viewingContactData: false\n    }\n\n    componentDidMount() {\n        this.props.getProduct()\n        this.props.getCart()\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.push('/cart');\n        this.setState( { viewingContactData: false })\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/cart/contact-data');\n        this.createNotification()\n        this.setState( { viewingContactData: true })\n    }\n\n    checkoutGoBackHomeHandler = () => {\n        this.props.history.push('/home');\n    }\n\n    decrementHandler = (id) => {\n        this.props.removeFromCart(id, this.props.products)\n    }\n\n    incrementHandler = (id) => {\n        this.props.addToCart(id, this.props.products)\n    }\n\n    createNotification = () => {\n        store.addNotification({\n            title: 'Order Placed',\n            message: 'Order was placed successfully',\n            type: 'info',                         // 'default', 'success', 'info', 'warning'\n            container: 'top-right',                // where to position the notifications\n            animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n            animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n            dismiss: {\n              duration: 3000\n            }\n          })\n    }\n\n    render() { \n        let CartPage =  <CartSummary\n                            cart = {this.props.cart}\n                            price = {this.props.totalPrice}\n                            checkoutContinued={this.checkoutContinuedHandler}\n                            goBackHome = {this.checkoutGoBackHomeHandler}\n                            increment = {this.incrementHandler}\n                            decrement = {this.decrementHandler}\n                            />\n                            \n\n        if (this.state.viewingContactData) {\n            CartPage =  <Route \n                            path={this.props.match.path + '/contact-data'} \n                            render={(props) => (<ContactData \n                                                    cart={this.props.cart} \n                                                    price={this.props.totalPrice} \n                                                    checkoutCancelled={this.checkoutCancelledHandler}\n                                                    {...props} />)} />\n        }\n\n        return (\n            <div>\n                {CartPage}\n            </div>\n        )\n    }\n}\n\nexport default connector(Cart)"]},"metadata":{},"sourceType":"module"}