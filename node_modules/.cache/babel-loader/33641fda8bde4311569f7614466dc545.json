{"ast":null,"code":"import axios from '../axio-cart';\nimport _ from 'lodash';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'; // export const GET_CART = 'GET_CART';\n\nexport const LOADING = 'LOADING';\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\nexport const getProduct = () => async dispatch => {\n  dispatch({\n    type: 'LOADING'\n  });\n\n  try {\n    const res = await axios.get('/product/find-all-product');\n    dispatch({\n      type: 'GET_PRODUCT',\n      payload: res\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PRODUCT_FAIL',\n      payload: error\n    });\n  }\n};\nexport const addToCart = (id, productList) => async dispatch => {\n  let cart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id');\n  let res = {};\n  let updatedCart = [];\n  let organizedCart = [];\n  let countArray = [];\n  let item = {};\n  let totalPrice = 0;\n\n  if (cart.data.length === 0) {\n    res = await axios.post('/cart/create-cart', {\n      productID: id,\n      userID: '5f63e617b29b17b8d1f854a7'\n    });\n    updatedCart = res.data;\n  } else {\n    res = await axios.put('/cart/add-to-cart', {\n      productID: id,\n      userID: '5f63e617b29b17b8d1f854a7'\n    });\n    updatedCart = res.data;\n  }\n\n  countArray = _.map(_.countBy(updatedCart), (val, key) => ({\n    productID: key,\n    count: val\n  }));\n\n  for (let i = 0; i < countArray.length; i++) {\n    item = productList.find(product => product.productID === countArray[i].id);\n    totalPrice += item.price * countArray[i].count;\n    item.count = countArray[i].count;\n    organizedCart.push(item);\n  }\n\n  dispatch({\n    type: 'ADD_TO_CART',\n    payload: [organizedCart, totalPrice]\n  });\n};\nexport const removeFromCart = product => async dispatch => {\n  let res = {};\n  let item = {};\n  let updatedCart = [];\n  res = await axios.put('/cart/remove-from-cart', {\n    productID: product._id,\n    userID: '5f63e617b29b17b8d1f854a7'\n  });\n  updatedCart = res.data;\n  countArray = _.map(_.countBy(updatedCart), (val, key) => ({\n    productID: key,\n    count: val\n  }));\n\n  for (let i = 0; i < countArray.length; i++) {\n    item = productList.find(product => product.productID === countArray[i].id);\n    totalPrice += item.price * countArray[i].count;\n    item.count = countArray[i].count;\n    organizedCart.push(item);\n  }\n\n  dispatch({\n    type: 'REMOVE_FROM_CART',\n    payload: res\n  });\n}; // export const getCart = () => async(dispatch) => {\n//         const res = await axios.get('/5f63e617b29b17b8d1f854a7/group-product');\n//         console.log(res)\n//         if (res) {\n//             dispatch({type: 'GET_CART', payload: res})\n//         }\n// }\n//import get product, map dispatch to the prop","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/store/actions.js"],"names":["axios","_","ADD_TO_CART","REMOVE_FROM_CART","LOADING","GET_PRODUCT","GET_PRODUCT_FAIL","getProduct","dispatch","type","res","get","payload","error","addToCart","id","productList","cart","updatedCart","organizedCart","countArray","item","totalPrice","data","length","post","productID","userID","put","map","countBy","val","key","count","i","find","product","price","push","removeFromCart","_id"],"mappings":"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","sourcesContent":["import axios from '../axio-cart';\nimport _ from 'lodash';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n// export const GET_CART = 'GET_CART';\nexport const LOADING = 'LOADING';\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\n\nexport const getProduct = () => async (dispatch) => {\n    dispatch({type: 'LOADING'});\n    try {\n        const res = await axios.get('/product/find-all-product')\n    \n        dispatch({type: 'GET_PRODUCT', payload: res})\n    } catch(error){\n        dispatch({type: 'GET_PRODUCT_FAIL', payload: error})\n    }\n    \n}\n\nexport const addToCart = (id, productList) => async (dispatch) => {\n    let cart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id');\n    let res = {}\n    let updatedCart = []\n    let organizedCart = []\n    let countArray = []\n    let item = {}\n    let totalPrice = 0\n\n    if (cart.data.length === 0) {\n\n        res = await axios.post('/cart/create-cart', {productID: id, userID: '5f63e617b29b17b8d1f854a7'})\n        updatedCart = res.data\n\n    } else {\n        res = await axios.put('/cart/add-to-cart', {productID: id, userID: '5f63e617b29b17b8d1f854a7'})\n        updatedCart = res.data\n\n    }\n    \n    countArray = _.map(_.countBy(updatedCart), (val, key) => ({productID: key, count: val }));\n\n    for (let i = 0; i < countArray.length; i++) {\n        item = productList.find(product => product.productID === countArray[i].id)\n        totalPrice += item.price * countArray[i].count\n        item.count = countArray[i].count\n        organizedCart.push(item);\n    }\n        \n\n    dispatch({type: 'ADD_TO_CART', payload: [organizedCart, totalPrice]})\n}\n\nexport const removeFromCart = (product) => async (dispatch) => {\n    let res = {}\n    let item = {}\n    let updatedCart = []\n\n    res = await axios.put('/cart/remove-from-cart', {productID: product._id, userID: '5f63e617b29b17b8d1f854a7'});\n    updatedCart = res.data\n\n    countArray = _.map(_.countBy(updatedCart), (val, key) => ({productID: key, count: val }));\n\n    for (let i = 0; i < countArray.length; i++) {\n        item = productList.find(product => product.productID === countArray[i].id)\n        totalPrice += item.price * countArray[i].count\n        item.count = countArray[i].count\n        organizedCart.push(item);\n    }\n\n    dispatch({type: 'REMOVE_FROM_CART', payload: res})\n\n}\n\n// export const getCart = () => async(dispatch) => {\n//         const res = await axios.get('/5f63e617b29b17b8d1f854a7/group-product');\n//         console.log(res)\n\n//         if (res) {\n//             dispatch({type: 'GET_CART', payload: res})\n//         }\n    \n// }\n//import get product, map dispatch to the prop\n\n\n"]},"metadata":{},"sourceType":"module"}