{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js\";\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { getProduct, addToCart } from '../../store/actions';\nimport axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst mapDispatchToProps = {\n  getProduct,\n  addToCart\n};\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  products: state.products,\n  error: state.error\n}); //this is received as a prop\n\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCartHandler = (id, type) => {\n      const product = this.props.products.find(product => product._id === id); //returns product object with specified id\n\n      this.props.addToCart(product);\n      this.createNotification(type);\n    };\n\n    this.moreInfoClickHandler = id => {\n      this.setState({\n        viewingMoreInfo: true,\n        currentViewingProductId: id\n      });\n    };\n\n    this.moreInfoCancelHandler = () => {\n      this.setState({\n        viewingMoreInfo: false\n      });\n    };\n\n    this.createNotification = () => {\n      store.addNotification({\n        title: 'Added to Cart',\n        message: 'Item Successfully Added to Cart',\n        type: 'success',\n        // 'default', 'success', 'info', 'warning'\n        container: 'top-right',\n        // where to position the notifications\n        animationIn: [\"animated\", \"fadeIn\"],\n        // animate.css classes that's applied\n        animationOut: [\"animated\", \"fadeOut\"],\n        // animate.css classes that's applied\n        dismiss: {\n          duration: 5000\n        }\n      });\n    };\n\n    this.state = {\n      products: [],\n      viewingMoreInfo: false,\n      currentViewingProductId: 0\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.createNotification = this.createNotification.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getProduct();\n  }\n\n  render() {\n    let mainPageDisplay = /*#__PURE__*/React.createElement(ItemCards, {\n      productsList: this.props.products,\n      moreInfo: this.moreInfoClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }\n    });\n\n    if (this.props.loading) {\n      mainPageDisplay = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 31\n        }\n      });\n    }\n\n    let moreInfoSummary = null;\n\n    if (this.state.currentViewingProductId !== 0) {\n      moreInfoSummary = /*#__PURE__*/React.createElement(MoreInfo, {\n        addToCart: this.addToCartHandler,\n        moreInfoCancel: this.moreInfoCancelHandler,\n        product: this.props.products.find(product => product._id === this.state.currentViewingProductId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.viewingMoreInfo,\n      modalClosed: this.moreInfoCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, moreInfoSummary), mainPageDisplay);\n  }\n\n} //only knows about redux here \n\n\nexport default connector(withErrorHandler(MainPage, axios));","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js"],"names":["React","Component","store","_","connect","getProduct","addToCart","axios","ItemCards","Aux","Spinner","Modal","MoreInfo","withErrorHandler","mapDispatchToProps","mapStateToProps","state","loading","products","error","connector","MainPage","constructor","props","addToCartHandler","id","type","product","find","_id","createNotification","moreInfoClickHandler","setState","viewingMoreInfo","currentViewingProductId","moreInfoCancelHandler","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","bind","componentDidMount","render","mainPageDisplay","moreInfoSummary"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {store} from 'react-notifications-component';\nimport _ from 'lodash';\nimport {connect} from 'react-redux';\nimport {getProduct, addToCart} from '../../store/actions';\n\nimport axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nconst mapDispatchToProps = {getProduct, addToCart}\nconst mapStateToProps = (state) => (\n    {   \n        loading: state.loading, \n        products: state.products, \n        error: state.error \n    }\n);\n//this is received as a prop\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            viewingMoreInfo: false,\n            currentViewingProductId: 0,\n        }\n\n        this.addToCart = this.addToCart.bind(this);\n        this.createNotification = this.createNotification.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getProduct()\n    }\n\n    addToCartHandler = (id, type) => {\n        const product = this.props.products.find(product => product._id === id)\n        //returns product object with specified id\n        this.props.addToCart(product);\n        this.createNotification(type);\n\n    }\n\n    moreInfoClickHandler = (id) => {\n        this.setState({viewingMoreInfo: true, currentViewingProductId: id});\n    }\n\n    moreInfoCancelHandler = () => {\n        this.setState({viewingMoreInfo: false})\n    }\n \n    createNotification = () => {\n        store.addNotification({\n            title: 'Added to Cart',\n            message: 'Item Successfully Added to Cart',\n            type: 'success',                         // 'default', 'success', 'info', 'warning'\n            container: 'top-right',                // where to position the notifications\n            animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n            animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n            dismiss: {\n              duration: 5000\n            }\n          })\n    }\n\n    render() {\n        let mainPageDisplay =  <ItemCards \n                                productsList={this.props.products} \n                                moreInfo={this.moreInfoClickHandler}\n                                />\n\n        if (this.props.loading) {\n            mainPageDisplay = <Spinner />\n        }\n\n        let moreInfoSummary = null;\n\n        if (this.state.currentViewingProductId !== 0) {\n            moreInfoSummary = (\n            <MoreInfo\n                addToCart={this.addToCartHandler}\n                moreInfoCancel={this.moreInfoCancelHandler}\n                product ={this.props.products.find(product => product._id === this.state.currentViewingProductId)}/>\n            )\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.viewingMoreInfo} modalClosed={this.moreInfoCancelHandler }>\n                    {moreInfoSummary}\n                </Modal>\n                {mainPageDisplay}\n            </Aux>    \n        )\n    }\n}\n\n//only knows about redux here \nexport default connector(withErrorHandler(MainPage, axios))"]},"metadata":{},"sourceType":"module"}