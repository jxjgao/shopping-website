{"ast":null,"code":"import axios from '../axio-cart';\nimport _ from 'lodash';\nexport const ADD_TO_CART = 'ADD_TO_CART'; // export const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n// export const GET_CART = 'GET_CART';\n\nexport const LOADING = 'LOADING';\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\nexport const getProduct = () => async dispatch => {\n  dispatch({\n    type: 'LOADING'\n  });\n\n  try {\n    const res = await axios.get('/product/find-all-product');\n    dispatch({\n      type: 'GET_PRODUCT',\n      payload: res\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PRODUCT_FAIL',\n      payload: error\n    });\n  }\n};\nexport const addToCart = (id, productList) => async dispatch => {\n  const cart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id');\n  const updatedCart = [];\n  const organizedCart = [];\n  const countArray = [];\n  const item = {};\n\n  if (cart.data === []) {\n    updatedCart = await axios.post('/cart/create-cart', {\n      productID: id,\n      userID: '5f63e617b29b17b8d1f854a7'\n    });\n  } else {\n    updatedCart = await axios.put('/cart/add-to-cart', {\n      productID: id,\n      userID: '5f63e617b29b17b8d1f854a7'\n    });\n  }\n\n  countArray = _.map(_.countBy(updatedCart), (val, key) => ({\n    productID: key,\n    count: val\n  }));\n\n  for (let i = 0; i < countArray.length; i++) {\n    item = productList.find(product => product._id === id);\n    totalPrice += item.price * countArray[i].count;\n    item.count = countArray[i].count;\n    organizedCart.push(item);\n  }\n\n  dispatch({\n    type: 'ADD_TO_CART',\n    payload: [organizedCart, totalPrice]\n  });\n}; // export const removeFromCart = (product) => async (dispatch) => {\n//     await axios.put('/cart/remove-from-cart', {productID: product._id, userID: '5f63e617b29b17b8d1f854a7'});\n//     const res = {}\n//     const updatedCart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/group-product');\n//     res.cart = updatedCart;\n//     res.productPrice = product.price;\n//     dispatch({type: 'REMOVE_FROM_CART', payload: res})\n// }\n// export const getCart = () => async(dispatch) => {\n//         const res = await axios.get('/5f63e617b29b17b8d1f854a7/group-product');\n//         console.log(res)\n//         if (res) {\n//             dispatch({type: 'GET_CART', payload: res})\n//         }\n// }\n//import get product, map dispatch to the prop","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/store/actions.js"],"names":["axios","_","ADD_TO_CART","LOADING","GET_PRODUCT","GET_PRODUCT_FAIL","getProduct","dispatch","type","res","get","payload","error","addToCart","id","productList","cart","updatedCart","organizedCart","countArray","item","data","post","productID","userID","put","map","countBy","val","key","count","i","length","find","product","_id","totalPrice","price","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB,C,CACP;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AACA,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,2BAAV,CAAlB;AAEAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,aAAP;AAAsBG,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAR;AACH,GAJD,CAIE,OAAMG,KAAN,EAAY;AACVL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,kBAAP;AAA2BG,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACH;AAEJ,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,WAAL,KAAqB,MAAOR,QAAP,IAAoB;AAC9D,QAAMS,IAAI,GAAG,MAAMhB,KAAK,CAACU,GAAN,CAAU,gDAAV,CAAnB;AACA,QAAMO,WAAW,GAAG,EAApB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,IAAI,GAAG,EAAb;;AAEA,MAAIJ,IAAI,CAACK,IAAL,KAAc,EAAlB,EAAsB;AAClBJ,IAAAA,WAAW,GAAG,MAAMjB,KAAK,CAACsB,IAAN,CAAW,mBAAX,EAAgC;AAACC,MAAAA,SAAS,EAAET,EAAZ;AAAgBU,MAAAA,MAAM,EAAE;AAAxB,KAAhC,CAApB;AACH,GAFD,MAEO;AACHP,IAAAA,WAAW,GAAG,MAAMjB,KAAK,CAACyB,GAAN,CAAU,mBAAV,EAA+B;AAACF,MAAAA,SAAS,EAAET,EAAZ;AAAgBU,MAAAA,MAAM,EAAE;AAAxB,KAA/B,CAApB;AACH;;AAEDL,EAAAA,UAAU,GAAGlB,CAAC,CAACyB,GAAF,CAAMzB,CAAC,CAAC0B,OAAF,CAAUV,WAAV,CAAN,EAA8B,CAACW,GAAD,EAAMC,GAAN,MAAe;AAACN,IAAAA,SAAS,EAAEM,GAAZ;AAAiBC,IAAAA,KAAK,EAAEF;AAAxB,GAAf,CAA9B,CAAb;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,UAAU,CAACa,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCX,IAAAA,IAAI,GAAGL,WAAW,CAACkB,IAAZ,CAAiBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBrB,EAA5C,CAAP;AACAsB,IAAAA,UAAU,IAAIhB,IAAI,CAACiB,KAAL,GAAalB,UAAU,CAACY,CAAD,CAAV,CAAcD,KAAzC;AACAV,IAAAA,IAAI,CAACU,KAAL,GAAaX,UAAU,CAACY,CAAD,CAAV,CAAcD,KAA3B;AACAZ,IAAAA,aAAa,CAACoB,IAAd,CAAmBlB,IAAnB;AACH;;AAGGb,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,aAAP;AAAsBG,IAAAA,OAAO,EAAE,CAACO,aAAD,EAAgBkB,UAAhB;AAA/B,GAAD,CAAR;AACP,CAxBM,C,CA0BP;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import axios from '../axio-cart';\nimport _ from 'lodash';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\n// export const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n// export const GET_CART = 'GET_CART';\nexport const LOADING = 'LOADING';\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\n\nexport const getProduct = () => async (dispatch) => {\n    dispatch({type: 'LOADING'});\n    try {\n        const res = await axios.get('/product/find-all-product')\n    \n        dispatch({type: 'GET_PRODUCT', payload: res})\n    } catch(error){\n        dispatch({type: 'GET_PRODUCT_FAIL', payload: error})\n    }\n    \n}\n\nexport const addToCart = (id, productList) => async (dispatch) => {\n    const cart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id');\n    const updatedCart = []\n    const organizedCart = []\n    const countArray = []\n    const item = {}\n\n    if (cart.data === []) {\n        updatedCart = await axios.post('/cart/create-cart', {productID: id, userID: '5f63e617b29b17b8d1f854a7'})\n    } else {\n        updatedCart = await axios.put('/cart/add-to-cart', {productID: id, userID: '5f63e617b29b17b8d1f854a7'})\n    }\n    \n    countArray = _.map(_.countBy(updatedCart), (val, key) => ({productID: key, count: val }));\n\n    for (let i = 0; i < countArray.length; i++) {\n        item = productList.find(product => product._id === id)\n        totalPrice += item.price * countArray[i].count\n        item.count = countArray[i].count\n        organizedCart.push(item);\n    }\n        \n\n        dispatch({type: 'ADD_TO_CART', payload: [organizedCart, totalPrice]})\n}\n\n// export const removeFromCart = (product) => async (dispatch) => {\n//     await axios.put('/cart/remove-from-cart', {productID: product._id, userID: '5f63e617b29b17b8d1f854a7'});\n//     const res = {}\n\n//     const updatedCart = await axios.get('/cart/5f63e617b29b17b8d1f854a7/group-product');\n//     res.cart = updatedCart;\n//     res.productPrice = product.price;\n\n//     dispatch({type: 'REMOVE_FROM_CART', payload: res})\n\n// }\n\n// export const getCart = () => async(dispatch) => {\n//         const res = await axios.get('/5f63e617b29b17b8d1f854a7/group-product');\n//         console.log(res)\n\n//         if (res) {\n//             dispatch({type: 'GET_CART', payload: res})\n//         }\n    \n// }\n//import get product, map dispatch to the prop\n\n\n"]},"metadata":{},"sourceType":"module"}