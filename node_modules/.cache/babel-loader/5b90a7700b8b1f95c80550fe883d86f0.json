{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Axios from '../../../axio-cart';\nimport Input from '../../../components/UI/Input/Input';\nimport classes from './ContactData.module.css';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        address: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Address'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        postalCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Postal Code'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6,\n            maxLength: 6,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'E-Mail'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        paymentMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              displayValue: 'Payment Method'\n            }, {\n              value: 'visa/mc',\n              displayValue: 'Visa/Mastercard'\n            }, {\n              value: 'debit',\n              displayValue: 'Debit Card'\n            }]\n          },\n          value: ''\n        },\n        shippingMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              displayValue: 'Shipping Method'\n            }, {\n              value: 'standard',\n              displayValue: 'Standard Shipping - $12.00'\n            }, {\n              value: 'expedited',\n              displayValue: 'Expedited Shipping - $25.00'\n            }]\n          },\n          value: ''\n        }\n      },\n      isLoaded: true\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        isLoaded: false\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.orderForm) {\n        formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n      } //name, address, zipCode, country, email, paymentType, product, userID, price\n\n\n      console.log(formData);\n      const order = {\n        name: formData.name,\n        address: formData.address,\n        postalCode: formData.postalCode,\n        country: formData.country,\n        email: formData.email,\n        paymentType: formData.paymentMethod,\n        cart: this.props.cart,\n        userID: '5f63e617b29b17b8d1f854a7',\n        price: this.props.price,\n        shippingMethod: formData.shippingMethod\n      };\n      Axios.post('/order/create-order', order).then(response => {\n        this.setState({\n          isLoaded: true\n        });\n        Axios.put('/cart/5f63e617b29b17b8d1f854a7/clear-cart-by-user-id');\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          isLoaded: true\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        color: '#4aadf0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.props.checkoutCancelled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n\n    if (!this.state.isLoaded) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/ContactData/ContactData.js"],"names":["React","Component","Button","Spinner","Axios","Input","classes","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","address","postalCode","minLength","maxLength","isNumeric","country","email","isEmail","paymentMethod","options","displayValue","shippingMethod","isLoaded","orderHandler","event","preventDefault","setState","formData","formElementIdentifier","console","log","order","paymentType","cart","props","userID","price","post","then","response","put","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","render","formElementsArray","key","id","config","form","map","formElement","color","checkoutCancelled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Axios from '../../../axio-cart';\nimport Input from '../../../components/UI/Input/Input';\nimport classes from './ContactData.module.css';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            address: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            postalCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Postal Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 6,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            paymentMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {displayValue: 'Payment Method'},\n                        {value: 'visa/mc', displayValue: 'Visa/Mastercard'},\n                        {value: 'debit', displayValue: 'Debit Card'}\n                    ]\n                },\n                value: ''\n            },\n            shippingMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {displayValue: 'Shipping Method'},\n                        {value: 'standard', displayValue: 'Standard Shipping - $12.00'},\n                        {value: 'expedited', displayValue: 'Expedited Shipping - $25.00'}\n                    ]\n                },\n                value: ''\n            },\n            \n        },\n        isLoaded: true\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { isLoaded: false } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        //name, address, zipCode, country, email, paymentType, product, userID, price\n        console.log(formData)\n        const order = {\n            name: formData.name,\n            address: formData.address,\n            postalCode: formData.postalCode,\n            country: formData.country,\n            email: formData.email,\n            paymentType: formData.paymentMethod,\n            cart: this.props.cart,\n            userID: '5f63e617b29b17b8d1f854a7',\n            price: this.props.price,\n            shippingMethod: formData.shippingMethod\n        }\n\n        Axios.post( '/order/create-order', order )\n            .then( response => {\n                this.setState( { isLoaded: true } );\n                Axios.put('/cart/5f63e617b29b17b8d1f854a7/clear-cart-by-user-id');\n                this.props.history.push( '/home' );\n            } )\n            .catch( error => {\n                this.setState( { isLoaded: true } );\n            } );\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        this.setState({orderForm: updatedOrderForm});\n    }\n    \n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button style={{\n                            color: '#4aadf0'\n                        }}\n                        >Order</Button>\n                <Button color=\"secondary\" onClick={this.props.checkoutCancelled}>Cancel</Button>\n            </form>\n        );\n        if ( !this.state.isLoaded ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}