{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/Cart.js\";\nimport React, { Component } from 'react';\nimport Axios from '../../axio-cart';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Button from '../../components/UI/Button/Button';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: [],\n      totalPrice: 0,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id').then(res => res.data).then(data => {\n      this.setState({\n        cart: data[0],\n        totalPrice: data[1],\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    let subtotalField = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, \"Subtotal: $\", this.state.totalPrice);\n    let checkoutButton = /*#__PURE__*/React.createElement(Button, {\n      btnType: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 30\n      }\n    }, \"Checkout\");\n\n    if (this.state.isLoaded === false) {\n      elements = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }\n      });\n      subtotalField = null;\n      checkoutButton = null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, elements, subtotalField, checkoutButton);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/Cart.js"],"names":["React","Component","Axios","Spinner","Button","Cart","state","cart","totalPrice","isLoaded","componentDidMount","get","then","res","data","setState","render","subtotalField","checkoutButton","elements"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KADiB;AAAA;;AAOzBC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,KAAK,CAACS,GAAN,CAAU,gDAAV,EACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKF,IAFL,CAGaE,IAAD,IAAU;AACN,WAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEO,IAAI,CAAC,CAAD,CAAZ;AAAiBN,QAAAA,UAAU,EAAEM,IAAI,CAAC,CAAD,CAAjC;AAAsCL,QAAAA,QAAQ,EAAE;AAAhD,OAAd;AACH,KALb;AAMH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgB,KAAKX,KAAL,CAAWE,UAD3B,CAApB;AAIA,QAAIU,cAAc,gBAAG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArB;;AAEA,QAAI,KAAKZ,KAAL,CAAWG,QAAX,KAAwB,KAA5B,EAAmC;AAC/BU,MAAAA,QAAQ,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,QADL,EAEKF,aAFL,EAGKC,cAHL,CADJ;AAOH;;AAnCwB;;AAsC7B,eAAeb,IAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport Axios from '../../axio-cart';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Button from '../../components/UI/Button/Button';\n\nclass Cart extends Component {\n    state = {\n        cart: [],\n        totalPrice: 0,\n        isLoaded: false\n    }\n\n    componentDidMount() {\n        Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id')\n            .then(res => res.data)\n            .then (\n                    (data) => {\n                        this.setState({ cart: data[0], totalPrice: data[1], isLoaded: true })\n                    })\n    }\n\n    render() {               \n        let subtotalField = <div>\n                                Subtotal: ${this.state.totalPrice}\n                            </div>\n        \n        let checkoutButton = <Button btnType=\"success\">Checkout</Button>\n\n        if (this.state.isLoaded === false) {\n            elements = <Spinner />\n            subtotalField = null\n            checkoutButton = null\n        }\n        return (\n            <div>\n                {elements}\n                {subtotalField}\n                {checkoutButton}\n            </div>\n        )\n    }\n}\n\nexport default Cart"]},"metadata":{},"sourceType":"module"}