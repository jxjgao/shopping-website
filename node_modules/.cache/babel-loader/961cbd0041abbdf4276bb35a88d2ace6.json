{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js\";\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport _ from 'lodash';\nimport Axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCartHandler = (id, type) => {\n      //returns product object with specified id\n      this.addToCart(id);\n      this.createNotification(type);\n    };\n\n    this.moreInfoClickHandler = id => {\n      console.log(id);\n      this.setState({\n        viewingMoreInfo: true,\n        currentViewingProductId: id\n      });\n    };\n\n    this.moreInfoCancelHandler = () => {\n      this.setState({\n        viewingMoreInfo: false\n      });\n    };\n\n    this.addToCart = async id => {\n      const product = this.state.products.find(product => product._id === id);\n      const productPrice = product.price;\n      const currPrice = this.state.totalPrice;\n      const newPrice = currPrice + productPrice; //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n      //hard coded userID fro now\n      //console.log( _.isEmpty({}) );  true\n\n      await Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart').then(res => _.isEmpty(res.data) === true ? this.setState({\n        cartFound: false\n      }) : this.setState({\n        cartFound: true\n      })); //\n\n      if (this.state.cartFound === true) {\n        await Axios.put('/cart/update-cart', {\n          product: product,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: newPrice\n        });\n      } else {\n        await Axios.post('/cart/create-cart', {\n          product: product,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: newPrice\n        });\n      }\n\n      this.setState({\n        totalPrice: newPrice\n      });\n    };\n\n    this.createNotification = () => {\n      store.addNotification({\n        title: 'Added to Cart',\n        message: 'Item Successfully Added to Cart',\n        type: 'success',\n        // 'default', 'success', 'info', 'warning'\n        container: 'top-right',\n        // where to position the notifications\n        animationIn: [\"animated\", \"fadeIn\"],\n        // animate.css classes that's applied\n        animationOut: [\"animated\", \"fadeOut\"],\n        // animate.css classes that's applied\n        dismiss: {\n          duration: 5000\n        }\n      });\n    };\n\n    this.state = {\n      products: [],\n      cartFound: false,\n      totalPrice: 0,\n      viewingMoreInfo: false,\n      currentViewingProductId: 0,\n      isLoaded: false\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.createNotification = this.createNotification.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.get('/product/find-all-product').then(res => res.data).then(data => {\n      this.setState({\n        products: data,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    let mainPageDisplay = /*#__PURE__*/React.createElement(ItemCards, {\n      productsList: this.state.products,\n      moreInfo: this.moreInfoClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 32\n      }\n    });\n\n    if (this.state.isLoaded === false) {\n      mainPageDisplay = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }\n      });\n    }\n\n    let moreInfoSummary = null;\n\n    if (this.state.currentViewingProductId !== 0) {\n      moreInfoSummary = /*#__PURE__*/React.createElement(MoreInfo, {\n        addToCart: this.addToCartHandler,\n        moreInfoCancel: this.moreInfoCancelHandler,\n        product: this.state.products.find(product => product._id === this.state.currentViewingProductId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.viewingMoreInfo,\n      modalClosed: this.moreInfoCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, moreInfoSummary), mainPageDisplay);\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js"],"names":["React","Component","store","_","Axios","ItemCards","Aux","Spinner","Modal","MoreInfo","MainPage","constructor","props","addToCartHandler","id","type","addToCart","createNotification","moreInfoClickHandler","console","log","setState","viewingMoreInfo","currentViewingProductId","moreInfoCancelHandler","product","state","products","find","_id","productPrice","price","currPrice","totalPrice","newPrice","get","then","res","isEmpty","data","cartFound","put","userID","post","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","isLoaded","bind","componentDidMount","render","mainPageDisplay","moreInfoSummary"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {store} from 'react-notifications-component';\nimport _ from 'lodash';\n\nimport Axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            cartFound: false,\n            totalPrice: 0,\n            viewingMoreInfo: false,\n            currentViewingProductId: 0,\n            isLoaded: false\n        }\n        this.addToCart = this.addToCart.bind(this);\n        this.createNotification = this.createNotification.bind(this);\n    }\n\n    componentDidMount() {\n        Axios.get('/product/find-all-product')\n            .then(res => res.data)\n            .then(\n                (data) => {\n                    this.setState({ products: data, isLoaded: true })\n                }\n            )\n    }\n\n    addToCartHandler = (id, type) => {\n        //returns product object with specified id\n        this.addToCart(id);\n        this.createNotification(type);\n\n    }\n\n    moreInfoClickHandler = (id) => {\n        console.log(id)\n        this.setState({viewingMoreInfo: true, currentViewingProductId: id});\n    }\n\n    moreInfoCancelHandler = () => {\n        this.setState({viewingMoreInfo: false})\n    }\n\n    addToCart = async(id) => {\n        const product = this.state.products.find(product => product._id === id)\n        const productPrice = product.price\n        const currPrice = this.state.totalPrice\n        const newPrice = currPrice + productPrice\n        //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n        //hard coded userID fro now\n        //console.log( _.isEmpty({}) );  true\n        await Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart')\n                    .then(res => (_.isEmpty(res.data) === true) ? this.setState({cartFound: false}) : this.setState({cartFound: true}));\n            //\n        \n        if (this.state.cartFound === true) {\n            await Axios.put('/cart/update-cart', {product: product, userID: '5f63e617b29b17b8d1f854a7', price: newPrice})\n        } else {\n            await Axios.post('/cart/create-cart', {product: product, userID: '5f63e617b29b17b8d1f854a7', price: newPrice})\n        }\n        \n        this.setState( {totalPrice: newPrice} );\n    }\n \n    createNotification = () => {\n        store.addNotification({\n            title: 'Added to Cart',\n            message: 'Item Successfully Added to Cart',\n            type: 'success',                         // 'default', 'success', 'info', 'warning'\n            container: 'top-right',                // where to position the notifications\n            animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n            animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n            dismiss: {\n              duration: 5000\n            }\n          })\n    }\n\n\n    render() {\n        let mainPageDisplay =  <ItemCards \n                                productsList={this.state.products} \n                                moreInfo={this.moreInfoClickHandler}\n                                />\n\n        if (this.state.isLoaded === false) {\n            mainPageDisplay = <Spinner />\n        }\n\n        let moreInfoSummary = null;\n\n        if (this.state.currentViewingProductId !== 0) {\n            moreInfoSummary = (\n            <MoreInfo\n                addToCart={this.addToCartHandler}\n                moreInfoCancel={this.moreInfoCancelHandler}\n                product ={this.state.products.find(product => product._id === this.state.currentViewingProductId)}/>\n            )\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.viewingMoreInfo} modalClosed={this.moreInfoCancelHandler }>\n                    {moreInfoSummary}\n                </Modal>\n                {mainPageDisplay}\n            </Aux>    \n        )\n    }\n}\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}