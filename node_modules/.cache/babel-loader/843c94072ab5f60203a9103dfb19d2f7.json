{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js\";\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css/animate.compat.css';\nimport Axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport Toolbar from '../../components/Toolbar/Toolbar';\nimport Cart from '../../components/Cart/Cart';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCartHandler = (id, type) => {\n      //returns product object with specified id\n      this.addToCart(id);\n      this.createNotification(type);\n    };\n\n    this.moreInfoClickHandler = id => {\n      this.setState({\n        viewingMoreInfo: true,\n        currentViewingProductId: id\n      });\n    };\n\n    this.moreInfoCancelHandler = () => {\n      this.setState({\n        viewingMoreInfo: false\n      });\n    };\n\n    this.viewingCartHandler = () => {\n      this.setState({\n        viewingCart: true\n      });\n    };\n\n    this.cancelViewingCartHander = () => {\n      this.setState({\n        viewingCart: false\n      });\n    };\n\n    this.addToCart = id => {\n      const product = this.state.products.find(product => product.id === id);\n      const productPrice = product.price;\n      const currPrice = this.state.totalPrice;\n      const newPrice = currPrice + productPrice; //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n      //hard coded userID fro now\n\n      Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart').then(res => res.data !== {} ? this.setState({\n        cartFound: true\n      }) : this.setState({\n        cartFound: false\n      }));\n\n      if (this.state.cartFound) {\n        Axios.put('/cart/update-cart', {\n          product: product,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: newPrice\n        });\n      } else {\n        Axios.post('/cart/create-cart', {\n          product: product,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: newPrice\n        });\n      }\n\n      this.setState({\n        totalPrice: newPrice\n      });\n    };\n\n    this.createNotification = () => {\n      store.addNotification({\n        title: 'Added to Cart',\n        message: 'Item Successfully Added to Cart',\n        type: 'success',\n        // 'default', 'success', 'info', 'warning'\n        container: 'top-right',\n        // where to position the notifications\n        animationIn: [\"animated\", \"fadeIn\"],\n        // animate.css classes that's applied\n        animationOut: [\"animated\", \"fadeOut\"],\n        // animate.css classes that's applied\n        dismiss: {\n          duration: 5000\n        }\n      });\n    };\n\n    this.state = {\n      products: [],\n      cartFound: false,\n      totalPrice: 0,\n      viewingMoreInfo: false,\n      currentViewingProductId: 0,\n      viewingCart: false,\n      isLoaded: false\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.createNotification = this.createNotification.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.get('/product/find-all-product').then(res => res.data).then(data => {\n      this.setState({\n        products: data,\n        isLoaded: true\n      });\n    });\n    console.log(this.state.products);\n  }\n\n  render() {\n    let mainPageDisplay = /*#__PURE__*/React.createElement(ItemCards, {\n      productsList: this.state.products,\n      moreInfo: this.moreInfoClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }\n    });\n\n    if (this.state.isLoaded === false) {\n      mainPageDisplay = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }\n      });\n    }\n\n    let moreInfoSummary = null;\n\n    if (this.state.currentViewingProductId !== 0) {\n      moreInfoSummary = /*#__PURE__*/React.createElement(MoreInfo, {\n        addToCart: this.addToCartHandler,\n        moreInfoCancel: this.moreInfoCancelHandler,\n        product: this.state.products.find(product => product.id === this.state.currentViewingProductId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      });\n    }\n\n    if (this.state.viewingCart) {\n      mainPageDisplay = /*#__PURE__*/React.createElement(Cart, {\n        itemsInCart: this.state.itemsInCart,\n        exitCartView: this.cancelViewingCartHander,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      viewingCart: this.viewingCartHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ReactNotification, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.viewingMoreInfo,\n      modalClosed: this.moreInfoCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, moreInfoSummary), mainPageDisplay);\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js"],"names":["React","Component","store","ReactNotification","Axios","ItemCards","Aux","Spinner","Modal","MoreInfo","Toolbar","Cart","MainPage","constructor","props","addToCartHandler","id","type","addToCart","createNotification","moreInfoClickHandler","setState","viewingMoreInfo","currentViewingProductId","moreInfoCancelHandler","viewingCartHandler","viewingCart","cancelViewingCartHander","product","state","products","find","productPrice","price","currPrice","totalPrice","newPrice","get","then","res","data","cartFound","put","userID","post","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","isLoaded","bind","componentDidMount","console","log","render","mainPageDisplay","moreInfoSummary","itemsInCart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {store} from 'react-notifications-component';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\nimport 'animate.css/animate.compat.css'\nimport Axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport Toolbar from '../../components/Toolbar/Toolbar';\nimport Cart from '../../components/Cart/Cart';\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            cartFound: false,\n            totalPrice: 0,\n            viewingMoreInfo: false,\n            currentViewingProductId: 0,\n            viewingCart: false,\n            isLoaded: false\n        }\n        this.addToCart = this.addToCart.bind(this);\n        this.createNotification = this.createNotification.bind(this);\n    }\n\n    componentDidMount() {\n        Axios.get('/product/find-all-product')\n            .then(res => res.data)\n            .then(\n                (data) => {\n                    this.setState({ products: data, isLoaded: true})\n                }\n            )\n            console.log(this.state.products)\n    }\n\n    addToCartHandler = (id, type) => {\n        //returns product object with specified id\n        this.addToCart(id);\n        this.createNotification(type);\n\n    }\n\n    moreInfoClickHandler = (id) => {\n        this.setState({viewingMoreInfo: true, currentViewingProductId: id});\n    }\n\n    moreInfoCancelHandler = () => {\n        this.setState({viewingMoreInfo: false})\n    }\n\n    viewingCartHandler = () => {\n        this.setState({viewingCart: true});\n    }\n\n    cancelViewingCartHander = () => {\n        this.setState({viewingCart: false})\n    }\n\n    addToCart = (id) => {\n        const product = this.state.products.find(product => product.id === id)\n        const productPrice = product.price\n        const currPrice = this.state.totalPrice\n        const newPrice = currPrice + productPrice\n        //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n        //hard coded userID fro now\n        Axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart')\n            .then(res => (res.data !== {}) ? this.setState({cartFound: true}) : this.setState({cartFound: false}));\n        \n        if (this.state.cartFound) {\n            Axios.put('/cart/update-cart', {product: product, userID: '5f63e617b29b17b8d1f854a7', price: newPrice})\n        } else {\n            Axios.post('/cart/create-cart', {product: product, userID: '5f63e617b29b17b8d1f854a7', price: newPrice})\n        }\n        \n        this.setState( {totalPrice: newPrice} );\n    }\n\n    createNotification = () => {\n        store.addNotification({\n            title: 'Added to Cart',\n            message: 'Item Successfully Added to Cart',\n            type: 'success',                         // 'default', 'success', 'info', 'warning'\n            container: 'top-right',                // where to position the notifications\n            animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n            animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n            dismiss: {\n              duration: 5000\n            }\n          })\n    }\n\n\n    render() {\n        let mainPageDisplay =  <ItemCards \n                                productsList={this.state.products} \n                                moreInfo={this.moreInfoClickHandler}\n                                />\n\n        if (this.state.isLoaded === false) {\n            mainPageDisplay = <Spinner />\n        }\n\n        let moreInfoSummary = null;\n\n        if (this.state.currentViewingProductId !== 0) {\n            moreInfoSummary = (\n            <MoreInfo\n                addToCart={this.addToCartHandler}\n                moreInfoCancel={this.moreInfoCancelHandler}\n                product ={this.state.products.find(product => product.id === this.state.currentViewingProductId)}/>\n            )\n        }\n\n        if (this.state.viewingCart) {\n            mainPageDisplay = <Cart \n                                    itemsInCart={this.state.itemsInCart}\n                                    exitCartView={this.cancelViewingCartHander}\n                                    />\n        }\n\n        return (\n            <Aux>\n                <Toolbar viewingCart={this.viewingCartHandler}/>\n                <ReactNotification />\n                <Modal show={this.state.viewingMoreInfo} modalClosed={this.moreInfoCancelHandler }>\n                    {moreInfoSummary}\n                </Modal>\n                {mainPageDisplay}\n            </Aux>    \n        )\n    }\n}\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}