{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../axio-cart';\nimport Input from '../../../components/UI/Input/Input';\nimport classes from './ContactData.module.css';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Name'\n          },\n          value: ''\n        },\n        address: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Address'\n          },\n          value: ''\n        },\n        postalCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Postal Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'E-Mail'\n          },\n          value: ''\n        },\n        paymentMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'visa/mc',\n              displayValue: 'Visa/Mastercard'\n            }, {\n              value: 'debit',\n              displayValue: 'Debit Card'\n            }]\n          },\n          value: ''\n        }\n      },\n      isLoaded: true\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        isLoaded: false\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.orderForm) {\n        formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n      }\n\n      const order = {\n        cart: this.props.cart,\n        price: this.props.price,\n        orderData: formData\n      };\n      console.log(formData);\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          isLoaded: true\n        });\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          isLoaded: true\n        });\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Danger\",\n      clicked: this.props.checkoutCancelled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n\n    if (!this.state.isLoaded) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/Cart/ContactData/ContactData.js"],"names":["React","Component","Button","Spinner","axios","Input","classes","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","address","postalCode","country","email","paymentMethod","options","displayValue","isLoaded","orderHandler","event","preventDefault","setState","formData","formElementIdentifier","order","cart","props","price","orderData","console","log","post","then","response","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","render","formElementsArray","key","id","config","form","map","formElement","checkoutCancelled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../axio-cart';\nimport Input from '../../../components/UI/Input/Input';\nimport classes from './ContactData.module.css';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Name'\n                },\n                value: ''\n            },\n            address: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Address'\n                },\n                value: ''\n            },\n            postalCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Postal Code'\n                },\n                value: ''\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-Mail'\n                },\n                value: ''\n            },\n            paymentMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'visa/mc', displayValue: 'Visa/Mastercard'},\n                        {value: 'debit', displayValue: 'Debit Card'}\n                    ]\n                },\n                value: ''\n            }\n        },\n        isLoaded: true\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { isLoaded: false } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            cart: this.props.cart,\n            price: this.props.price,\n            orderData: formData\n        }\n        console.log(formData)\n        axios.post( '/orders.json', order )\n            .then( response => {\n                this.setState( { isLoaded: true } );\n                this.props.history.push( '/home' );\n            } )\n            .catch( error => {\n                this.setState( { isLoaded: true } );\n            } );\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        this.setState({orderForm: updatedOrderForm});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\">Order</Button>\n                <Button btnType=\"Danger\" clicked={this.props.checkoutCancelled}>Cancel</Button>\n            </form>\n        );\n        if ( !this.state.isLoaded ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}