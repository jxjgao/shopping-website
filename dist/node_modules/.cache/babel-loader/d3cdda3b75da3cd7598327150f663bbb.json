{"ast":null,"code":"var _jsxFileName = \"/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js\";\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { getProduct } from '../../store/actions';\nimport axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst mapDispatchToProps = {\n  getProduct\n}; //this is received as a prop\n\nconst connector = connect(state => ({\n  loading: state.loading\n}), mapDispatchToProps);\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCartHandler = (id, type) => {\n      //returns product object with specified id\n      this.addToCart(id);\n      this.createNotification(type);\n    };\n\n    this.moreInfoClickHandler = id => {\n      this.setState({\n        viewingMoreInfo: true,\n        currentViewingProductId: id\n      });\n    };\n\n    this.moreInfoCancelHandler = () => {\n      this.setState({\n        viewingMoreInfo: false\n      });\n    };\n\n    this.addToCart = async id => {\n      const product = this.state.products.find(product => product._id === id);\n      const productPrice = product.price; //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n      //hard coded userID fro now\n      //console.log( _.isEmpty({}) );  true\n\n      await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id').then(res => _.isEmpty(res.data) === true ? this.setState({\n        cartFound: false\n      }) : this.setState({\n        cartFound: true\n      })); //\n\n      if (this.state.cartFound === true) {\n        await axios.put('/cart/add-to-cart', {\n          productID: product._id,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: productPrice\n        });\n      } else {\n        await axios.post('/cart/create-cart', {\n          productID: product._id,\n          userID: '5f63e617b29b17b8d1f854a7',\n          price: productPrice\n        });\n      }\n    };\n\n    this.createNotification = () => {\n      store.addNotification({\n        title: 'Added to Cart',\n        message: 'Item Successfully Added to Cart',\n        type: 'success',\n        // 'default', 'success', 'info', 'warning'\n        container: 'top-right',\n        // where to position the notifications\n        animationIn: [\"animated\", \"fadeIn\"],\n        // animate.css classes that's applied\n        animationOut: [\"animated\", \"fadeOut\"],\n        // animate.css classes that's applied\n        dismiss: {\n          duration: 5000\n        }\n      });\n    };\n\n    this.state = {\n      products: [],\n      cartFound: false,\n      viewingMoreInfo: false,\n      currentViewingProductId: 0\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.createNotification = this.createNotification.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getProduct();\n  }\n\n  render() {\n    let mainPageDisplay = /*#__PURE__*/React.createElement(ItemCards, {\n      productsList: this.state.products,\n      moreInfo: this.moreInfoClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }\n    });\n\n    if (this.props.loading) {\n      mainPageDisplay = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }\n      });\n    }\n\n    let moreInfoSummary = null;\n\n    if (this.state.currentViewingProductId !== 0) {\n      moreInfoSummary = /*#__PURE__*/React.createElement(MoreInfo, {\n        addToCart: this.addToCartHandler,\n        moreInfoCancel: this.moreInfoCancelHandler,\n        product: this.state.products.find(product => product._id === this.state.currentViewingProductId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.viewingMoreInfo,\n      modalClosed: this.moreInfoCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, moreInfoSummary), mainPageDisplay);\n  }\n\n} //only knows about redux here \n\n\nexport default connector(withErrorHandler(MainPage, axios));","map":{"version":3,"sources":["/Users/janeg/Documents/Projects/shopping-website-1/src/containers/MainPage/MainPage.js"],"names":["React","Component","store","_","connect","getProduct","axios","ItemCards","Aux","Spinner","Modal","MoreInfo","withErrorHandler","mapDispatchToProps","connector","state","loading","MainPage","constructor","props","addToCartHandler","id","type","addToCart","createNotification","moreInfoClickHandler","setState","viewingMoreInfo","currentViewingProductId","moreInfoCancelHandler","product","products","find","_id","productPrice","price","get","then","res","isEmpty","data","cartFound","put","productID","userID","post","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","bind","componentDidMount","render","mainPageDisplay","moreInfoSummary"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {store} from 'react-notifications-component';\nimport _ from 'lodash';\nimport {connect} from 'react-redux';\nimport {getProduct} from '../../store/actions';\n\nimport axios from '../../axio-cart';\nimport ItemCards from '../../components/ItemCards/ItemCards.js';\nimport Aux from '../../hoc/Aux/Aux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport MoreInfo from '../../components/MoreInfo/MoreInfo';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nconst mapDispatchToProps = {getProduct}\n//this is received as a prop\nconst connector = connect((state)=>({ loading: state.loading }), mapDispatchToProps);\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            cartFound: false,\n            viewingMoreInfo: false,\n            currentViewingProductId: 0,\n        }\n\n        this.addToCart = this.addToCart.bind(this);\n        this.createNotification = this.createNotification.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getProduct()\n    }\n\n    addToCartHandler = (id, type) => {\n        //returns product object with specified id\n        this.addToCart(id);\n        this.createNotification(type);\n\n    }\n\n    moreInfoClickHandler = (id) => {\n        this.setState({viewingMoreInfo: true, currentViewingProductId: id});\n    }\n\n    moreInfoCancelHandler = () => {\n        this.setState({viewingMoreInfo: false})\n    }\n\n    addToCart = async(id) => {\n        const product = this.state.products.find(product => product._id === id)\n        const productPrice = product.price\n        //if it returns empty object, it means that the cart doesn't current exist, so we create a new one\n        //hard coded userID fro now\n        //console.log( _.isEmpty({}) );  true\n        await axios.get('/cart/5f63e617b29b17b8d1f854a7/find-cart-by-id')\n                    .then(res => (_.isEmpty(res.data) === true) ? this.setState({cartFound: false}) : this.setState({cartFound: true}))\n            //\n        \n        if (this.state.cartFound === true) {\n            await axios.put('/cart/add-to-cart', {productID: product._id, userID: '5f63e617b29b17b8d1f854a7', price: productPrice})\n        } else {\n            await axios.post('/cart/create-cart', {productID: product._id, userID: '5f63e617b29b17b8d1f854a7', price: productPrice})\n        }\n    }\n \n    createNotification = () => {\n        store.addNotification({\n            title: 'Added to Cart',\n            message: 'Item Successfully Added to Cart',\n            type: 'success',                         // 'default', 'success', 'info', 'warning'\n            container: 'top-right',                // where to position the notifications\n            animationIn: [\"animated\", \"fadeIn\"],     // animate.css classes that's applied\n            animationOut: [\"animated\", \"fadeOut\"],   // animate.css classes that's applied\n            dismiss: {\n              duration: 5000\n            }\n          })\n    }\n\n    render() {\n        let mainPageDisplay =  <ItemCards \n                                productsList={this.state.products} \n                                moreInfo={this.moreInfoClickHandler}\n                                />\n\n        if (this.props.loading) {\n            mainPageDisplay = <Spinner />\n        }\n\n        let moreInfoSummary = null;\n\n        if (this.state.currentViewingProductId !== 0) {\n            moreInfoSummary = (\n            <MoreInfo\n                addToCart={this.addToCartHandler}\n                moreInfoCancel={this.moreInfoCancelHandler}\n                product ={this.state.products.find(product => product._id === this.state.currentViewingProductId)}/>\n            )\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.viewingMoreInfo} modalClosed={this.moreInfoCancelHandler }>\n                    {moreInfoSummary}\n                </Modal>\n                {mainPageDisplay}\n            </Aux>    \n        )\n    }\n}\n\n//only knows about redux here \nexport default connector(withErrorHandler(MainPage, axios))"]},"metadata":{},"sourceType":"module"}